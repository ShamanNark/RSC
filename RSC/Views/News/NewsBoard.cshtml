@model RSC.Models.NewsViewModels.IndexNewsViewModel
@{
    ViewData["Title"] = "NewsBoard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .block {
        background-size: cover;
        text-align: center;
        height: 350px;
    }

    .imagenews {
        background-size: cover;
        text-align: center;
        height: 150px;
    }

    .borderblock {
        padding-top: 10px;
        padding-bottom:10px;
        border: 2px solid #e8e8e8;
    }

    .blocknews {
        padding-top: 10px;
        padding-bottom: 10px;        
    }
    
    
    .block:hover > p {
        font-weight: bold;
        display: block;
        position: absolute;
        z-index: 999999;
        text-align: center;
        transition: .4s ease-in-out;
    }


    .news-header {
        background: linear-gradient(to right, #5ca4c2, #4674a3 98%) 0 0 no-repeat;
        padding-top:10px;
        padding-bottom:10px;
        min-height:50px;
    }

    .newslink {
        color: white;
        font-size: 18px;
        text-transform: uppercase;
        list-style: none;
        cursor: pointer;
    }

    .tabs-controllers {
        list-style: none;      
        display: flex;      
        flex-direction:row;
    }

    .tabs-controllers__item {
        list-style: none;
        text-align: center;
        color: #ffffff;
    }

    .tabs-controllers__item-active {
        border-bottom: 1px solid #ffffff;
        text-decoration: none;
    }

    .dateTimePadding {
        padding-top: 25px;
    }
</style>
<link href="~/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css" rel="stylesheet"/>
<header class="news-header">
    <div class="navbar-collapse collapse">
        <ul id="tabs-list" class="tab-controllers">
            @for (var i = 0; i < Model.NewsRubrics.Count(); i++)
            {
                <li class="tabs-controllers__item  col-md-3 " data-class="">
                    <a class="newslink @(@i == 0 ? "tabs-controllers__item-active" : "")" data-value="@Model.NewsRubrics[i].Id">@Model.NewsRubrics[i].Name</a>
                </li>

            }
        </ul>
    </div>
</header>

<div class="container dateTimePadding">
    <div class='col-md-3'>
        <div class="form-group">
            <div class='input-group date' id='StartDateTime'>
                <input type='text' class="form-control" />
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
    </div>
    <div class='col-md-3'>
        <div class="form-group">
            <div class='input-group date' id='StopDateTime'>
                <input type='text' class="form-control" />
                <span class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
    </div>
</div>

<div class="partialViewNews">
    @Html.Partial("PartialViewNews", Model)
</div>

@section Scripts
{
    <script src="~/js/moment-with-locales.js"></script>
    <script src="~/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js"></script>
    <script tyoe="text/javascript">
        var GetNews = function () {
            var tab = $(".tabs-controllers__item-active").attr('data-value');
            $.ajax({
                method: "POST",
                url: '@Url.Action("GetNewsByRubricId","News")',
                data: { id: tab, startDateTime: $("#StartDateTime").find("input").val(), stopDateTime: $("#StopDateTime").find("input").val() },
                dataType: "html"
            }).success(function(data) {
                $(".partialViewNews").html(data);
            }).error(function() {

            });
        }

        var startDateTime = new Date();
        var stopDateTime = new Date();
        $('#StartDateTime').datetimepicker({
            locale: 'ru',
            defaultDate: startDateTime.setMonth(startDateTime.getMonth() - 3)
        });
        $('#StopDateTime').datetimepicker({
            locale: 'ru',
            defaultDate: stopDateTime.setDate(stopDateTime.getDate() + 1),
            useCurrent: false
        });
        $("#StartDateTime").on("dp.change",
            function (e) {
                $('#StopDateTime').data("DateTimePicker").minDate(e.date);
                GetNews();
            });

        $("#StopDateTime").on("dp.change",
            function (e) {
                $('#StartDateTime').data("DateTimePicker").maxDate(e.date);
                GetNews();
            });

        var paginationAction = function () {
            $("#pagination a").click(function () {
                var tab = $(".tabs-controllers__item-active").attr('data-value');
                $.ajax({
                    method: "POST",
                    url: '@Url.Action("GetNewsByRubricId","News")',
                    data: {
                        id: tab,
                        startDateTime: $("#StartDateTime").find("input").val(),
                        stopDateTime: $("#StopDateTime").find("input").val(),
                        page: this.textContent
                    },
                    dataType: "html"
                }).success(function (data) {
                    $(".partialViewNews").html(data);
                    paginationAction();
                }).error(function () {

                });
            });

        }

        $(function() {
            $(".newslink").click(function() {
                $('.newslink').removeClass('tabs-controllers__item-active');
                $(this).addClass('tabs-controllers__item-active');
                GetNews();
            });

            paginationAction();
        });

    </script>
}
