@model RSC.Models.NewsViewModels.EditNewsViewModel

@{
    ViewData["Title"] = "Редактирование";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<link href="~/css/NewsHomePageImage.css" type="text/css" rel="stylesheet" />
<link rel="stylesheet" href="~/bootstrap-multiselect/css/bootstrap-multiselect.css" type="text/css" />
<link href="https://cdn.quilljs.com/1.3.3/quill.snow.css" rel="stylesheet">
<link rel="stylesheet" href="~/dist/css/croppie.css" type="text/css" />

<h2>Редактировать новость</h2>

<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Edit" method="post" enctype="multipart/form-data">
            @Html.HiddenFor(model => model.Id)
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>           
            <div class="form-group">
                <label asp-for="Title" class="control-label col-md-12" style="padding: 0"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SelectedRubrics" class="control-label col-md-12" styl="padding:0"></label>
                @Html.ListBoxFor(item => Model.SelectedRubrics, Model.NewsRubrics, new { @class="form-control", multiple = "multiple" })
                <span asp-validation-for="SelectedRubrics" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CreateDateTime" class="control-label"></label>
                <input type="datetime-local" asp-for="CreateDateTime" class="form-control" />
                <span asp-validation-for="CreateDateTime" class="text-danger"></span>
            </div>
      
            <div style="height: 300px;" id="editor"></div>
            
            @Html.HiddenFor(item => Model.Text)

            <div class="form-group">
                <label asp-for="MainImagePath" class="control-label col-md-12" style="padding: 0"></label>
                <img id="blah" src="@Url.Content(Model.MainImagePath)" style="max-width: 250px;" alt="your image" />
                <input type="file" asp-for="MainImage" onchange="readURL(this);"/>
                <span asp-validation-for="MainImage" class="text-danger"></span>
            </div>

            @Html.HiddenFor(item => Model.HomePageImage)
            <input id="imagepath" type="hidden" src="@Url.Content(Model.HomePageImagePath)" />
            @Html.Partial("PartialViewHomePageImage")       
            
            <div class="form-group">
                <input type="submit" value="Сохранить" onclick="SaveText()" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    @if (this.User.IsInRole("admin"))
    {
        <a asp-action="Index">Вернуться к списку</a> <br />
    }
    <a asp-action="NewsBoard">Вернуться к новостой стене</a>
</div>
@section Scripts{ 
<script type="text/javascript" src="~/bootstrap-multiselect/js/bootstrap-multiselect.js"></script>
<script src="https://cdn.quilljs.com/1.3.3/quill.js"></script>
<script src="~/dist/js/croppie.js"></script>
@*<script src="~/js/NewsHomePageImage.js"></script>*@
    <script>
        $('#SelectedRubrics').multiselect();
        var quill = new Quill('#editor', {
            theme: 'snow'
        });
        quill.pasteHTML(document.getElementById('Text').value);
        function SaveText(parameters) {
            document.getElementById('Text').value = quill.container.firstChild.innerHTML;
        }

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#blah')
                        .attr('src', e.target.result);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }

        $uploadCrop = $('#upload-demo').croppie({
            url: $("#imagepath")[0].src,
            viewport: { width: 600, height: 300 },
            
            enableResize: false,
            enableOrientation: true
        });


        $('#upload-file').on('change', function () { readFile(this); });
        function readFile(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('.upload-demo').addClass('ready');
                    $uploadCrop.croppie('bind', {
                        url: e.target.result
                    }).then(function () {
                        console.log('jQuery bind complete');
                    });

                }

                reader.readAsDataURL(input.files[0]);
                $('#upload-demo').removeClass('border-error').addClass('border-warning').change();
            }
            else {
                swal("Sorry - you're browser doesn't support the FileReader API");
            }
        }

        $('#upload-result').on('click', function (ev) {
            $uploadCrop.croppie('result', {
                type: 'canvas',
                size: 'viewport'
            }).then(function (resp) {
                $('#HomePageImage').val(resp);
                $('#upload-demo').removeClass('border-yellow').addClass('border-success').change();
            });
            return false;
        });
        
    </script>
}