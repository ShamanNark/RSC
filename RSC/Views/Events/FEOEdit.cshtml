@using RSC.Data.DbModels
@model RSC.Controllers.Models.EventsViewModels.EventCreateViewModel

<div class="paddingMainblock">
    <h2>Финансово-экономическое обоснование</h2>
    <div class="col-md-12">
        @foreach(CostSection costsection in Model.CostSections)
        {
            <h3>
                @costsection.Name
            </h3>
            @foreach(var divisions in costsection.CostDivisions)
            {
                <div class="costsheet">
                    <h4>@divisions.Name</h4>
                    <div class="row CostsList">
                        @foreach (var Cost in @Model.Costs.Where(cost => cost.СostDivisionId == divisions.Id))
                        {
                            <div class="CostsElement num">
                                @Html.HiddenFor(model => Cost.СostDivisionId)
                                @Html.HiddenFor(model => Cost.Id)
                                <div class="form-group directionOfCost col-md-3">
                                    @Html.LabelFor(model => Cost.DirectionOfCost, new { @class = "control-label" })
                                    @Html.EditorFor(model => Cost.DirectionOfCost, new { htmlAttributes =  new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => Cost.DirectionOfCost)
                                </div>
                                <div class="form-group unit col-md-2">
                                    @Html.LabelFor(model => Cost.Unit, new { @class="control-label" })
                                    @Html.EditorFor(model => Cost.Unit, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => Cost.Unit)
                                </div>
                                <div class="form-group count col-md-1">
                                    @Html.LabelFor(model => Cost.Count, new { @class = "control-label" })
                                    @Html.EditorFor(model => Cost.Count, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => Cost.Count)
                                </div>
                                <div class="form-group unitPrice col-md-2">
                                    @Html.LabelFor(model => Cost.UnitPrice, new { @class = "control-label" })
                                    @Html.EditorFor(model => Cost.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => Cost.UnitPrice)
                                </div>
                                <div class="form-group amountCost col-md-2">
                                    @Html.LabelFor(model => Cost.AmountCost, new { @class = "control-label" })
                                    @Html.EditorFor(model => Cost.AmountCost, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => Cost.AmountCost)
                                </div>
                                <div class="form-group note col-md-1">
                                    @Html.LabelFor(model => Cost.Note, new { @class = "control-label" })
                                    @Html.EditorFor(model => Cost.Note, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => Cost.Note)
                                </div>
                                <div class="col-md-1">
                                    <span class="glyphicon glyphicon-remove deleteCosts" aria-hidden="true" style="background-color:lightgreay"></span>
                                </div>
                            </div>
                        }
                    </div>
                    <button class="btn btn-sm btn-success addCosts" data-divisionsid="@divisions.Id">Добавить</button>
                </div>
            }
        }
    </div>
</div>